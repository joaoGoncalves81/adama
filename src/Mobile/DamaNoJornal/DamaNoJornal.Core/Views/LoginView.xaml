<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="DamaNoJornal.Core.Views.LoginView"
		 	 xmlns:viewModelBase="clr-namespace:DamaNoJornal.Core.ViewModels.Base;assembly=DamaNoJornal.Core"
             xmlns:animations="clr-namespace:DamaNoJornal.Core.Animations;assembly=DamaNoJornal.Core"
             xmlns:converters="clr-namespace:DamaNoJornal.Core.Converters;assembly=DamaNoJornal.Core"
             xmlns:triggers="clr-namespace:DamaNoJornal.Core.Triggers;assembly=DamaNoJornal.Core"
             xmlns:behaviors="clr-namespace:DamaNoJornal.Core.Behaviors;assembly=DamaNoJornal.Core"
			 viewModelBase:ViewModelLocator.AutoWireViewModel="true">
    <ContentPage.Title>
        <OnPlatform x:TypeArguments="x:String">
            <On Platform="iOS, UWP, WinRT, WinPhone" Value="Dama no Jornal App" />
        </OnPlatform>
    </ContentPage.Title>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
            <converters:WebNavigatingEventArgsConverter x:Key="WebNavigatingEventArgsConverter" />
            <converters:WebNavigatedEventArgsConverter x:Key="WebNavigatedEventArgsConverter" />

            <Style x:Key="TitleLabelStyle"
                TargetType="{x:Type Label}">
                <Setter Property="FontFamily"
                    Value="{StaticResource MontserratRegular}" />
                <Setter Property="FontAttributes"
                    Value="Bold" />
                <Setter Property="FontSize"
                    Value="{StaticResource MediumSize}" />
                <Setter Property="HorizontalOptions"
                    Value="Center" />
                <Setter Property="Margin"
                    Value="0, 12" />
            </Style>

            <Style x:Key="HeaderLabelStyle"
                TargetType="{x:Type Label}">
                <Setter Property="FontFamily"
                    Value="{StaticResource MontserratRegular}" />
                <Setter Property="FontSize"
                    Value="{StaticResource LittleSize}" />
                <Setter Property="TextColor"
                    Value="{StaticResource GreenColor}" />
                <Setter Property="HorizontalOptions"
                    Value="Center" />
            </Style>

            <Style x:Key="LoginButtonStyle"
                TargetType="{x:Type Label}">
                <Setter Property="FontFamily"
                    Value="{StaticResource MontserratRegular}" />
                <Setter Property="TextColor"
                    Value="{StaticResource WhiteColor}" />
                <Setter Property="HorizontalOptions"
                    Value="Center" />
                <Setter Property="VerticalOptions"
                    Value="Center" />
            </Style>

            <Style x:Key="LoginPanelStyle"
                TargetType="{x:Type Grid}">
                <Setter Property="HeightRequest"
                    Value="60" />
                <Setter Property="BackgroundColor"
                    Value="{StaticResource LightGreenColor}" />
                <Setter Property="HorizontalOptions"
                    Value="FillAndExpand" />
                <Setter Property="VerticalOptions"
                    Value="FillAndExpand" />
            </Style>

            <Style x:Key="RegisterPanelStyle"
                TargetType="{x:Type Grid}"
                BasedOn="{StaticResource LoginPanelStyle}">
                <Setter Property="BackgroundColor"
                    Value="{StaticResource GreenColor}" />
            </Style>

            <Style x:Key="SettingsPanelStyle"
                TargetType="{x:Type Grid}"
                BasedOn="{StaticResource LoginPanelStyle}">
                <Setter Property="BackgroundColor"
                    Value="{StaticResource BlackColor}" />
            </Style>

            <Style x:Key="SettingsImageStyle"
                TargetType="{x:Type Image}">
                <Setter Property="Margin"
                    Value="12" />
            </Style>
            
            <Style x:Key="FilterPickerStyle"  
             TargetType="{x:Type Picker}">
                <Setter Property="HeightRequest"
                Value="48" />
                <Setter Property="BackgroundColor"
                Value="Transparent" />
                <Setter Property="HorizontalOptions"
                Value="Center" />
                <Setter Property="VerticalOptions"
                Value="Fill" />
                <Setter Property="Margin"                
                Value="0, 2" />
            </Style>


            <animations:StoryBoard
              x:Key="LoginAnimation"
              Target="{x:Reference LoginPanel}">
                <animations:FadeInAnimation
                    Direction="Up"
                    Duration="1500" />
            </animations:StoryBoard>

        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Triggers>
        <EventTrigger
            Event="Appearing">
            <triggers:BeginAnimation
                Animation="{StaticResource LoginAnimation}" />
        </EventTrigger>
    </ContentPage.Triggers>
    <Grid
      BackgroundColor="{StaticResource BackgroundColor}">
        <!-- MOCK AUTH -->
        <Grid
            x:Name="LoginPanel"
            IsVisible="{Binding IsMock}"
            Padding="0"
            ColumnSpacing="0"
            RowSpacing="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!-- LOGIN / REGISTER / SETTINGS -->
            <Grid   
                Grid.Row="0"
                Margin="48, 24">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <StackLayout  
                  Grid.Column="0"
                  Orientation="Horizontal"
                  HorizontalOptions="Center">
                    <Label     
                        Text="["
                        TextColor="{StaticResource LightGreenColor}"/>
                    <Label
                        Text="LOGIN"
                        FontAttributes="Bold"/>
                    <Label
                        Text="]"
                        TextColor="{StaticResource LightGreenColor}"/>
                </StackLayout>
                <StackLayout  
                  Grid.Column="2"
                  Orientation="Horizontal"
                  HorizontalOptions="Center">
                    <Label
                        Text="SETTINGS"/>
                    <StackLayout.GestureRecognizers>
                        <TapGestureRecognizer
                            Command="{Binding SettingsCommand}"
                            NumberOfTapsRequired="1" />
                    </StackLayout.GestureRecognizers>
                </StackLayout>
            </Grid>
            <!-- INFO -->
            <Label
              Grid.Row="1"
              Text="Quem és tu?"
              Style="{StaticResource TitleLabelStyle}"/>
            <!-- LOGIN FORM -->
            <StackLayout   
                Grid.Row="2"
                Margin="24">
                <StackLayout 
                    Orientation="Horizontal"
                    HorizontalOptions="Center">
                    <StackLayout>
                        <Image>
                            <Image.Source>
                                <OnPlatform x:TypeArguments="ImageSource">
                                    <On Platform="UWP, WinRT, WinPhone" Value="Assets/img-joao.png" />
                                    <On Platform="iOS, Android" Value="img_joao.png" />
                                </OnPlatform>
                            </Image.Source>
                        </Image>
                        <Label 
                            Text="João"
                            Style="{StaticResource HeaderLabelStyle}"/>
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer
                                Command="{Binding MockSignInCommand}"
                                CommandParameter="jue@damanojornal.com"
                                NumberOfTapsRequired="1" />
                        </StackLayout.GestureRecognizers>
                    </StackLayout>
                    <StackLayout>
                        <Image>
                            <Image.Source>
                                <OnPlatform x:TypeArguments="ImageSource">
                                    <On Platform="UWP, WinRT, WinPhone" Value="Assets/img-sue.png" />
                                    <On Platform="iOS, Android" Value="img_sue.png" />
                                </OnPlatform>
                            </Image.Source>
                        </Image>
                        <Label 
                            Text="Susana"
                            Style="{StaticResource HeaderLabelStyle}"/>
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer
                                Command="{Binding MockSignInCommand}"
                                CommandParameter="sue@damanojornal.com"
                                NumberOfTapsRequired="1" />
                        </StackLayout.GestureRecognizers>
                    </StackLayout>
                    <StackLayout>
                        <Image>
                            <Image.Source>
                                <OnPlatform x:TypeArguments="ImageSource">
                                    <On Platform="UWP, WinRT, WinPhone" Value="Assets/img-sonia.png" />
                                    <On Platform="iOS, Android" Value="img_sonia.png" />
                                </OnPlatform>
                            </Image.Source>
                        </Image>
                        <Label 
                            Text="Sonia"
                            Style="{StaticResource HeaderLabelStyle}"/>
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer
                                Command="{Binding MockSignInCommand}"
                                CommandParameter="sonia@damanojornal.com"
                                NumberOfTapsRequired="1" />
                        </StackLayout.GestureRecognizers>
                    </StackLayout>
                    <StackLayout>
                        <Image>
                            <Image.Source>
                                <OnPlatform x:TypeArguments="ImageSource">
                                    <On Platform="UWP, WinRT, WinPhone" Value="Assets/img-rute.png" />
                                    <On Platform="iOS, Android" Value="img_rute.png" />
                                </OnPlatform>
                            </Image.Source>
                        </Image>
                        <Label 
                            Text="Rute"
                            Style="{StaticResource HeaderLabelStyle}"/>
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer
                                Command="{Binding MockSignInCommand}"
                                CommandParameter="rute@damanojornal.com"
                                NumberOfTapsRequired="1" />
                        </StackLayout.GestureRecognizers>
                    </StackLayout>
                </StackLayout>
                <!--<Label
                  Text="User name or email"
                  Style="{StaticResource HeaderLabelStyle}" />
                <Entry Text="{Binding UserName.Value, Mode=TwoWay}">
					<Entry.Style>
                        <OnPlatform x:TypeArguments="Style">
                            <On Platform="iOS, Android" Value="{StaticResource EntryStyle}" />
                            <On Platform="UWP, WinRT, WinPhone" Value="{StaticResource UwpEntryStyle}" />
                        </OnPlatform>
                    </Entry.Style>
                    <Entry.Behaviors>
						<behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateUserNameCommand}" />
					</Entry.Behaviors>
					<Entry.Triggers>
						<DataTrigger 
							TargetType="Entry"
							Binding="{Binding UserName.IsValid}"
							Value="False">
							<Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
						</DataTrigger>
					</Entry.Triggers>
                </Entry>
				<Label 
					Text="{Binding UserName.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}" />
                <Label
                  Text="Password"
                  Style="{StaticResource HeaderLabelStyle}"/>
                <Entry
                  IsPassword="True"
                  Text="{Binding Password.Value, Mode=TwoWay}">
                    <Entry.Style>
                        <OnPlatform x:TypeArguments="Style">
                            <On Platform="iOS, Android" Value="{StaticResource EntryStyle}" />
                            <On Platform="UWP, WinRT, WinPhone" Value="{StaticResource UwpEntryStyle}" />
                        </OnPlatform>
                    </Entry.Style>
					<Entry.Behaviors>
						<behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidatePasswordCommand}" />
					</Entry.Behaviors>
					<Entry.Triggers>
						<DataTrigger 
							TargetType="Entry"
							Binding="{Binding Password.IsValid}"
							Value="False">
							<Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
						</DataTrigger>
					</Entry.Triggers>
                </Entry>
				<Label 
					Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}" />-->
            </StackLayout>
            <Label
              Grid.Row="3"
              Text="Escolhe o sitio:"
              IsVisible="{Binding IsValid}"  
              Style="{StaticResource TitleLabelStyle}"/>
            <StackLayout   
                Grid.Row="4"
                Margin="24"
                IsVisible="{Binding IsValid}">
                <StackLayout 
                    Orientation="Horizontal"
                    HorizontalOptions="Center">
                    <StackLayout>
                        <Image>
                            <Image.Source>
                                <OnPlatform x:TypeArguments="ImageSource">
                                    <On Platform="UWP, WinRT, WinPhone" Value="Assets/img-loule.jpg" />
                                    <On Platform="iOS, Android" Value="img_loule.jpg" />
                                </OnPlatform>
                            </Image.Source>
                        </Image>
                        <Label 
                            Text="Feira Popular de Loulé"
                            Style="{StaticResource HeaderLabelStyle}"/>
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer
                                Command="{Binding PlaceSelectCommand}"
                                CommandParameter="1"
                                NumberOfTapsRequired="1" />
                        </StackLayout.GestureRecognizers>
                    </StackLayout>
                    <StackLayout>
                        <Image>
                            <Image.Source>
                                <OnPlatform x:TypeArguments="ImageSource">
                                    <On Platform="iOS, Android" Value="img_serra.jpg" />
                                    <On Platform="UWP, WinRT, WinPhone" Value="Assets/img-serra.jpg" />
                                </OnPlatform>
                            </Image.Source>
                        </Image>
                        <Label 
                            Text="Feira da Serra de São Brás"
                            Style="{StaticResource HeaderLabelStyle}"/>
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer
                                Command="{Binding PlaceSelectCommand}"
                                CommandParameter="2"
                                NumberOfTapsRequired="1" />
                        </StackLayout.GestureRecognizers>
                    </StackLayout>
                    <StackLayout>
                        <Image>
                            <Image.Source>
                                <OnPlatform x:TypeArguments="ImageSource">
                                    <On Platform="iOS, Android" Value="img_mercado.jpg" />
                                    <On Platform="UWP, WinRT, WinPhone" Value="Assets/img-mercado.jpg" />
                                </OnPlatform>
                            </Image.Source>
                        </Image>
                        <Label 
                            Text="Mercado Municipal de Loulé"
                            Style="{StaticResource HeaderLabelStyle}"/>
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer
                                Command="{Binding PlaceSelectCommand}"
                                CommandParameter="3"
                                NumberOfTapsRequired="1" />
                        </StackLayout.GestureRecognizers>
                    </StackLayout>
                </StackLayout>
                <!--<Label
                  Text="User name or email"
                  Style="{StaticResource HeaderLabelStyle}" />
                <Entry Text="{Binding UserName.Value, Mode=TwoWay}">
					<Entry.Style>
                        <OnPlatform x:TypeArguments="Style">
                            <On Platform="iOS, Android" Value="{StaticResource EntryStyle}" />
                            <On Platform="UWP, WinRT, WinPhone" Value="{StaticResource UwpEntryStyle}" />
                        </OnPlatform>
                    </Entry.Style>
                    <Entry.Behaviors>
						<behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateUserNameCommand}" />
					</Entry.Behaviors>
					<Entry.Triggers>
						<DataTrigger 
							TargetType="Entry"
							Binding="{Binding UserName.IsValid}"
							Value="False">
							<Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
						</DataTrigger>
					</Entry.Triggers>
                </Entry>
				<Label 
					Text="{Binding UserName.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}" />
                <Label
                  Text="Password"
                  Style="{StaticResource HeaderLabelStyle}"/>
                <Entry
                  IsPassword="True"
                  Text="{Binding Password.Value, Mode=TwoWay}">
                    <Entry.Style>
                        <OnPlatform x:TypeArguments="Style">
                            <On Platform="iOS, Android" Value="{StaticResource EntryStyle}" />
                            <On Platform="UWP, WinRT, WinPhone" Value="{StaticResource UwpEntryStyle}" />
                        </OnPlatform>
                    </Entry.Style>
					<Entry.Behaviors>
						<behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidatePasswordCommand}" />
					</Entry.Behaviors>
					<Entry.Triggers>
						<DataTrigger 
							TargetType="Entry"
							Binding="{Binding Password.IsValid}"
							Value="False">
							<Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
						</DataTrigger>
					</Entry.Triggers>
                </Entry>
				<Label 
					Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}"
					Style="{StaticResource ValidationErrorLabelStyle}" />-->
            </StackLayout>
            <!--<Label
              Grid.Row="3"
              Text="Local"
              Style="{StaticResource TitleLabelStyle}"/>
            <Picker
                x:Name="PickerPlaces"
              Grid.Row="4"
              ItemsSource="{Binding Places}"
              SelectedItem="{Binding PlaceSelected, Mode=TwoWay}"
              Style="{StaticResource FilterPickerStyle}">
                <Picker.HeightRequest>
                    <OnPlatform x:TypeArguments="x:Double">
                        <On Platform="iOS, Android" Value="48" />
                        <On Platform="UWP, WinRT, WinPhone" Value="36" />
                    </OnPlatform>
                </Picker.HeightRequest>
            </Picker>-->
            <!-- LOGIN BUTTON -->
            <!--
            <Grid
                BackgroundColor="{StaticResource LightGreenColor}"
                Grid.Row="3"
                Padding="0"
                ColumnSpacing="0"
                RowSpacing="0">
                <Label
                  Text="[ LOGIN ]"
                  Style="{StaticResource LoginButtonStyle}"/>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer
                        Command="{Binding MockSignInCommand}"
                        NumberOfTapsRequired="1" />
                </Grid.GestureRecognizers>
            </Grid>-->
        </Grid>
        <!-- AUTH -->
        <Grid
          ColumnSpacing="0"
          RowSpacing="0"
          IsVisible="{Binding IsMock, Converter={StaticResource InverseBoolConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="60" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition Width="64" />
            </Grid.ColumnDefinitions>
            <!-- BANNER -->
            <Image
                x:Name="Banner"
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Aspect="AspectFill">
                <Image.Source>
                    <OnPlatform x:TypeArguments="ImageSource">
                        <On Platform="iOS, Android" Value="banner.png" />
                        <On Platform="UWP, WinRT, WinPhone" Value="Assets\banner.png" />
                    </OnPlatform>
                </Image.Source>
            </Image>
            <Grid
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                BackgroundColor="{StaticResource BlackColor}"
                Opacity="0.5"/>
            <!-- LOG IN BUTTON -->
            <Grid
                Grid.Column="0"
                Grid.Row="1"
                Style="{StaticResource LoginPanelStyle}">
                <Label
                  Text="[ LOGIN ]"
                  Style="{StaticResource LoginButtonStyle}"/>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer
                        Command="{Binding SignInCommand}"
                        NumberOfTapsRequired="1" />
                </Grid.GestureRecognizers>
            </Grid>
            <!-- REGISTER BUTTON -->
            <Grid
                Grid.Column="1"
                Grid.Row="1"
                Style="{StaticResource RegisterPanelStyle}">
                <Label
                  Text="[ REGISTER ]"
                  Style="{StaticResource LoginButtonStyle}"/>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer
                        Command="{Binding RegisterCommand}"
                        NumberOfTapsRequired="1" />
                </Grid.GestureRecognizers>
            </Grid>
            <!-- SETTINGS -->
            <Grid
                Grid.Column="2"
                Grid.Row="1"
                Style="{StaticResource SettingsPanelStyle}">
                <Image
                    Style="{StaticResource SettingsImageStyle}">
                    <Image.Source>
                        <OnPlatform x:TypeArguments="ImageSource">
                            <On Platform="iOS, Android" Value="app_settings" />
                            <On Platform="UWP, WinRT, WinPhone" Value="Assets/app_settings.png" />
                        </OnPlatform>
                    </Image.Source>
                </Image>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer
                        Command="{Binding SettingsCommand}"
                        NumberOfTapsRequired="1" />
                </Grid.GestureRecognizers>
            </Grid>
            <!-- WEBVIEW -->
            <AbsoluteLayout
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Grid.Row="0"
                Grid.RowSpan="2"
                IsVisible="{Binding IsLogin}">
                <WebView     
                    Source="{Binding LoginUrl}"
                    AbsoluteLayout.LayoutBounds="0, 0, 1, 1"
                    AbsoluteLayout.LayoutFlags="All">
                    <WebView.Behaviors>
                        <behaviors:EventToCommandBehavior 
                            EventName="Navigating"
                            EventArgsConverter="{StaticResource WebNavigatingEventArgsConverter}"
                            Command="{Binding NavigateCommand}" />
                    </WebView.Behaviors>
                </WebView>
            </AbsoluteLayout>
        </Grid>
        <!-- INDICATOR -->
        <ActivityIndicator      
          Color="{StaticResource LightGreenColor}"
          IsRunning="{Binding IsBusy}"
          IsVisible="{Binding IsBusy}"
          VerticalOptions="Center"
          HorizontalOptions="Center">
            <ActivityIndicator.WidthRequest>
                <OnPlatform x:TypeArguments="x:Double">
                    <On Platform="iOS, Android" Value="100" />
                    <On Platform="UWP, WinRT, WinPhone" Value="400" />
                </OnPlatform>
            </ActivityIndicator.WidthRequest>
        </ActivityIndicator>
    </Grid>
</ContentPage>