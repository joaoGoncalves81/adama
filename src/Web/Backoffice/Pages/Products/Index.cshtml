@page
@model Backoffice.Pages.Products.IndexModel

@{
    ViewData["Title"] = "Produtos";
}

<h2>Produtos</h2>

<p>
    <a asp-page="Create">Novo</a>
</p>
<table class="table table-pagination">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].CatalogCategories)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].CatalogTypeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].CatalogIllustrationId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].Sku)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].ShowOnShop)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].IsNew)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].IsFeatured)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductModel[0].CanCustomize)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ProductModel)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @foreach (var cat in item.CatalogCategories)
        {
            @cat.Label
            <br />
            @foreach (var child in cat.Childs)
    {
        @child.Label
        <br />
}
}
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CatalogType.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CatalogIllustration.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sku)
            </td>
            <td>
                <input type="checkbox" asp-for="@item.ShowOnShop" class="updateProduct" product-id="@item.Id" checkboxType="1" />   
            </td>
            <td>
                <input type="checkbox" asp-for="@item.IsNew" class="updateProduct" product-id="@item.Id" checkboxType="2"  />
            </td>
            <td>
                <input type="checkbox" asp-for="@item.IsFeatured" class="updateProduct" product-id="@item.Id" checkboxType="3" />
            </td>
            <td>
                <input type="checkbox" asp-for="@item.CanCustomize" class="updateProduct" product-id="@item.Id" checkboxType="4" />
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Detalhes</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Remover</a>
            </td>
        </tr>
        }
    </tbody>
</table>

@section Scripts{
    <script>
        $(document).ready(function () {
            $('.updateProduct').on('change', function () {
                var productId = $(this).attr('product-id');
                var chooseType = $(this).attr('checkboxType');
                $.getJSON('@(Url.Page("Index", "UpdateProduct"))' + '&id=' + productId + '&checkboxType=' + chooseType + '&value= ' + $(this).is(":checked"), function (data) {
          
                });
            });
        });
    </script>

}