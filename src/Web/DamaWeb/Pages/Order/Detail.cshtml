@page
@using DamaWeb.Extensions;
@model DetailModel

@{
    ViewData["Title"] = "Detalhe da Encomenda";
}

<div class="dnj-orders_detail">

    <h1 class="text-uppercase">As Minhas Encomendas</h1>
    <h2 class="text-uppercase mt-3 mt-sm-5">@ViewData["Title"] Número #@Model.OrderDetails.OrderNumber</h2>

    @foreach (var item in Model.OrderDetails.OrderItems)
    {
        <div class="row mt-3 mt-sm-5">
            <div class="col-12 col-sm-4 order-2 order-sm-0">
                <img class="img-fluid" src="@item.PictureUrl">
            </div>
            <div class="col-12 col-sm-4 order-0 order-sm-1 border-right border-primary">
                <dl>
                    <dt>Produto</dt>
                    <dd>@item.DisplayProductName</dd>
                    <dt>Quantidade</dt>
                    <dd>@item.Units</dd>
                    @if (!string.IsNullOrEmpty(item.CustomizeName))
                    {
                        <dt>Personalização</dt>
                        <dd>@item.CustomizeName</dd>
                    }
                    @if (item.Attributes?.Count > 0)
                    {
                        foreach (var attr in item.Attributes)
                        {
                            <dt>@(EnumHelper<ApplicationCore.Entities.AttributeType>.GetDisplayValue(attr.Type))</dt>
                            <dd>@attr.AttributeName</dd>
                        }
                    }
                    @if (item.IsCustomize)
                    {
                        <dt>@Html.DisplayNameFor(_ => item.CustomizeDescription)</dt>
                        <dd>@item.CustomizeDescription</dd>
                        @if (!string.IsNullOrEmpty(item.CustomizeText))
                        {
                            <dt>@Html.DisplayNameFor(_ => item.CustomizeText)</dt>
                            <dd>@item.CustomizeText</dd>
                        }

                        @if (!string.IsNullOrEmpty(item.CustomizeColors))
                        {
                            <dt>@Html.DisplayNameFor(_ => item.CustomizeColors)</dt>
                            <dd>
                                @{
                                    var colors = item.CustomizeColors.Split(',');
                                    foreach (var rgb in colors)
                                    {
                                        var rgbText = rgb.Replace(';', ',');
                                        <div class="order-customize-colors" style='background-color: @rgbText'>&nbsp;</div>
                                    }
                                }
                            </dd>
                        }
                    }
                    <dt>Data</dt>
                    <dd>@Html.DisplayFor(_ => Model.OrderDetails.OrderDate)</dd>
                    <dt>Total</dt>
                    <dd>
                        @if (item.UnitPrice > 0)
                        {
                            <text>
                                @Math.Round(item.Units * item.UnitPrice, 2).ToString("N2") €
                            </text>
                        }
                        else
                        {
                            <small>preço em análise</small>
                        }
                    </dd>
                    <dt>Estado</dt>
                    <dd>@Model.OrderDetails.Status</dd>
                </dl>
            </div>
            <div class="col-12 col-sm-4 order-1 order-sm-2">
                <dl>
                    <dt>Morada de Entrega</dt>
                    <dd>
                        @Model.OrderDetails.ShippingAddress.Name <br />
                        @Model.OrderDetails.ShippingAddress.Street <br />
                        @Model.OrderDetails.ShippingAddress.PostalCode @Model.OrderDetails.ShippingAddress.City  - @Model.OrderDetails.ShippingAddress.Country
                    </dd>
                    @if (!string.IsNullOrEmpty(Model.OrderDetails.BillingAddress?.Street))
                    {
                        <dt>Morada de Faturação</dt>
                        <dd>
                            @Model.OrderDetails.BillingAddress.Name <br />
                            @Model.OrderDetails.TaxNumber <br />
                            @Model.OrderDetails.BillingAddress.Street <br />
                            @Model.OrderDetails.BillingAddress.PostalCode @Model.OrderDetails.BillingAddress.City  - @Model.OrderDetails.BillingAddress.Country
                        </dd>
                    }
                </dl>
            </div>
        </div>
    }

    @if(Model.OrderDetails.Discount.HasValue)
    {
        <section class="dnj-orders_detail-section dnj-orders_detail-section--right mt-3">
            <article class="dnj-orders_detail-titles dnj-basket-titles--clean row">
                <section class="dnj-orders_detail-title d-none d-sm-block col-sm-7"></section>
                <section class="dnj-orders_detail-title col-8 col-sm-3 text-sm-right"><small>Desconto 25%</small></section>
                <section class="dnj-orders_detail-item dnj-orders_detail-item--mark col-4 col-sm-2 text-nowrap text-right text-sm-left">- @Model.OrderDetails.Discount.Value.ToString("N2") €</section>
            </article>
        </section>

    }

    @if (Model.OrderDetails.ShippingCost > 0)
    {
        <section class="dnj-orders_detail-section dnj-orders_detail-section--right">
            <article class="dnj-orders_detail-titles dnj-basket-titles--clean row">
                <section class="dnj-orders_detail-title d-none d-sm-block col-sm-7"></section>
                <section class="dnj-orders_detail-title col-8 col-sm-3 text-sm-right"><small>Despesas de Envio</small></section>
                <section class="dnj-orders_detail-item dnj-orders_detail-item--mark col-4 col-sm-2 text-nowrap text-right text-sm-left">@Model.OrderDetails.ShippingCost €</section>
            </article>

            <article class="dnj-orders_detail-items row">
                <section class="dnj-orders_detail-item col-9"></section>

            </article>
        </section>

    }

    <section class="dnj-orders_detail-section">
        <article class="dnj-orders_detail-titles dnj-basket-titles--clean row">
            <section class="dnj-orders_detail-title d-none d-sm-block col-sm-7"></section>
            <section class="dnj-orders_detail-title col-8 col-sm-3 text-sm-right">TOTAL</section>
            <section class="dnj-orders_detail-item dnj-orders_detail-item--mark col-4 col-sm-2 text-nowrap text-right text-sm-left">@(Model.OrderDetails.Total.HasValue ? Model.OrderDetails.Total + " €" : "em análise")</section>
        </article>
    </section>

</div>
