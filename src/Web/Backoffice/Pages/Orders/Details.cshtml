@page
@model Backoffice.Pages.Orders.DetailsModel
@{
    ViewData["Title"] = "Detalhe";
}
<h2>Encomenda nº @Model.OrderModel.Id</h2>
<partial name="_StatusMessage" for="StatusMessage" />
<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.BuyerId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.BuyerId)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.OrderDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.OrderDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.ShipToAddress_Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.ShipToAddress_Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.ShipToAddress_PhoneNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.ShipToAddress_PhoneNumber)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.ShipToAddress)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.ShipToAddress)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.UseBillingSameAsShipping)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.UseBillingSameAsShipping)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.BillingToAddress_Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.BillingToAddress_Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.BillingToAddress_PhoneNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.BillingToAddress_PhoneNumber)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.TaxNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.TaxNumber)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.BillingToAddress)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.BillingToAddress)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.Discount)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.Discount)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.ShippingCost)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.ShippingCost)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.Total)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.Total)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.OrderState)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.OrderState)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderModel.SalesInvoiceNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderModel.SalesInvoiceNumber)
        </dd>
    </dl>
    <h4>Produtos</h4>
    <form method="post">
        <table class="table">
            <tr>
                <th>@Html.DisplayNameFor(model => model.OrderModel.Items[0].PictureUri)</th>
                <th>@Html.DisplayNameFor(model => model.OrderModel.Items[0].ProductSku)</th>
                <th>@Html.DisplayNameFor(model => model.OrderModel.Items[0].ProductName)</th>
                <th>@Html.DisplayNameFor(model => model.OrderModel.Items[0].Units)</th>
                <th>@Html.DisplayNameFor(model => model.OrderModel.Items[0].UnitPrice)</th>
                <th>@Html.DisplayNameFor(model => model.OrderModel.Items[0].CustomizeName)</th>
                <th>@Html.DisplayNameFor(model => model.OrderModel.Items[0].Attributes)</th>
            </tr>

            @for (var i = 0; i < Model.OrderModel.Items.Count; i++)
            {
                <tr>
                    <td>
                        <input type="hidden" asp-for="OrderModel.Items[i].Id" />
                        <input type="hidden" asp-for="OrderModel.Items[i].CustomizeItemCatalogTypeId" />
                        <img width="200" src="@Model.OrderModel.Items[i].PictureUri" class="img-responsive" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.OrderModel.Items[i].ProductSku)
                    </td>
                    <td>

                        @if (Model.OrderModel.Items[i].CustomizeItemCatalogTypeId.HasValue)
                        {
                            <text>
                                Personalização - @Html.DisplayFor(modelItem => Model.OrderModel.Items[i].ProductName)
                                <br />
                                <label>Descrição</label>
                                <br />
                                @Html.DisplayFor(model => Model.OrderModel.Items[i].CustomizeItemDescription)
                                <br />
                                <label>Nome ou Frase</label>
                                <br />
                                @Html.DisplayFor(model => Model.OrderModel.Items[i].CustomizeItemNameOrText)
                                <br />
                                <label>Cores </label>
                                <br />
                            </text>
                            if (!string.IsNullOrEmpty(Model.OrderModel.Items[i].CustomizeItemColors))
                            {
                                List<string> colors = new List<string>();
                                var temp = Model.OrderModel.Items[i].CustomizeItemColors.Split(',');
                                colors.AddRange(temp.Select(x => x.Replace(';', ',')).ToList());

                                foreach (var rgb in colors)
                                {
                                    <div style='width:20px;height:20px;display:inline;float:left;background-color: @rgb'>&nbsp;</div>
                                }
                            }
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => Model.OrderModel.Items[i].ProductName)
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model.OrderModel.Items[i].Units)
                    </td>
                    <td>
                        @if (Model.OrderModel.Items[i].CustomizeItemCatalogTypeId.HasValue && Model.OrderModel.OrderState != ApplicationCore.Entities.OrderAggregate.OrderStateType.DELIVERED)
                        {
                            <input asp-for="OrderModel.Items[i].UnitPrice" class="form-control decimal" />
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => Model.OrderModel.Items[i].UnitPrice)
                        }
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(Model.OrderModel.Items[i].CustomizeName))
                        {
                            <text>
                                Nome : @Model.OrderModel.Items[i].CustomizeName
                                <br />
                            </text>
                        }
                        @if (!string.IsNullOrEmpty(Model.OrderModel.Items[i].CustomizeSide))
                        {
                            <text>
                                Lado: @Model.OrderModel.Items[i].CustomizeSide
                                <br />
                            </text>
                        }
                        @if (Model.OrderModel.Items[i].CustomizeItemCatalogTypeId.HasValue)
                        {
                            <text>
                                Completa
                            </text>
                        }

                    </td>
                    <td>
                        <table class="table">
                            @foreach (var attr in Model.OrderModel.Items[i].Attributes)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => attr.AttributeType)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => attr.AttributeName)
                                    </td>
                                </tr>
                            }
                        </table>
                    </td>
                </tr>
            }
        </table>
        @if (Model.OrderModel.HasCustomizeProducts && Model.OrderModel.OrderState != ApplicationCore.Entities.OrderAggregate.OrderStateType.DELIVERED)
        {
            <input type="hidden" asp-for="OrderModel.Id" />
            <input type="hidden" asp-for="OrderModel.OrderState" />
            <button type="submit" asp-page-handler="UpdateItemsPrice" class="btn btn-info">Atualizar Preços</button>
        }
    </form>
</div>
<hr />
<div>
    <h4>Mudar de estado para</h4>
    <div class="row">
        <div class="col-md-4">
            <form method="post">
                <input type="hidden" asp-for="OrderModel.Id" />
                <div class="form-group">
                    <select asp-for="OrderModel.OrderState" asp-items="Html.GetEnumSelectList<ApplicationCore.Entities.OrderAggregate.OrderStateType>()" class="form-control"></select>
                    <span asp-validation-for="OrderModel.OrderState" class="text-danger"></span>
                </div>
                <input type="submit" value="Atualizar" class="btn btn-default" />
            </form>
        </div>
    </div>
    <h4>Pagamento</h4>
    <div class="row">
        <div class="col-md-4">
            @if (!Model.OrderModel.SalesInvoiceId.HasValue)
            {
                <form method="post">
                    <input type="hidden" asp-for="OrderModel.Id" />
                    <div class="form-group">
                        <select asp-for="OrderModel.PaymentTypeSelected" asp-items="Html.GetEnumSelectList<ApplicationCore.DTOs.PaymentType>()" class="form-control"></select>
                        <span asp-validation-for="OrderModel.PaymentTypeSelected" class="text-danger"></span>
                    </div>
                    <input type="submit" value="Criar Fatura/Pagamento" class="btn btn-success" asp-page-handler="RegisterInvoice" />
                </form>
            }
            else
            {
                if (!Model.OrderModel.SalesPaymentId.HasValue)
                {
                    <form method="post">
                        <input type="hidden" asp-for="OrderModel.Id" />
                        <div class="form-group">
                            <select asp-for="OrderModel.PaymentTypeSelected" asp-items="Html.GetEnumSelectList<ApplicationCore.DTOs.PaymentType>()" class="form-control"></select>
                            <span asp-validation-for="OrderModel.PaymentTypeSelected" class="text-danger"></span>
                        </div>
                        <input type="submit" value="Criar Pagamento" class="btn btn-success" asp-page-handler="CreatePayment" />
                    </form>
                }
                <span class="bold">Fatura nº @Model.OrderModel.SalesInvoiceNumber</span><br>
                <a asp-page-handler="InvoicePDF" asp-route-id="@Model.OrderModel.Id" asp-route-invoiceId="@Model.OrderModel.SalesInvoiceId" class="btn btn-default">Imprimir Fatura</a>
            }
            <br /><br />
            <form method="post">
                <input type="hidden" asp-for="OrderModel.Id" />
                <button type="submit" asp-page-handler="SendEmailToClient" class="btn btn-info">Enviar mail a cliente</button>
                @if (Model.OrderModel.HasInvoiceReady)
                {
                    <div class="alert alert-success" role="alert">
                        A Fatura está pronta para ser enviada. Ver aqui: <a asp-page-handler="InvoicePDF" asp-route-id="@Model.OrderModel.Id" asp-route-invoiceId="@Model.OrderModel.SalesInvoiceId">Fatura#@Model.OrderModel.Id</a>
                    </div>
                }
                else
                {
                    <div class="alert alert-warning" role="alert">
                        Atenção não existe fatura, vai ser enviado um mail de confirmação de transferência sem fatura!!!
                    </div>


                }
            </form>
        </div>
    </div>
</div>
<hr />
<div>
    <a asp-page="./Index">Voltar para a lista</a>
</div>
